@using System.Globalization

@model List<onlineExamApp.Models.Exam>
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["AvailableExams"];
    var isArabic = CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "ar";
}

<head>
    <link rel="stylesheet" href="~/css/page.css" asp-append-version="true" />
</head>

<div class="container mt-4">
    <h2>@Localizer["AvailableExams"]</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info" style="background-color: #f5f1e9; color: #5e4b3c; border-color: #a68c6d;">
            @Localizer["NoExamsAvailable"]
        </div>
    }
    else
    {
        <ul class="list-group mt-3">
            @foreach (var exam in Model)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>
                        <strong>@exam.Title</strong> - @exam.Subject <br />
                        <small>@exam.StartTimeUtc.ToLocalTime().ToString("g") â†’ @exam.EndTimeUtc.ToLocalTime().ToString("g")</small>
                    </span>
                    <a href="@(isArabic ? $"/Exams/TakeAr/{exam.Id}" : $"/Exams/Take/{exam.Id}")" class="btn btn-sm btn-outline-primary">
                        @Localizer["TakeExam"]
                    </a>
                </li>
            }
        </ul>
    }
</div>


