@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@inject SignInManager<onlineExamApp.Models.ApplicationUser> SignInManager
@inject UserManager<onlineExamApp.Models.ApplicationUser> UserManager
@inject IViewLocalizer Localizer

@{
    var title = ViewData["Title"] as string ?? "OnlineExam";
    var culture = System.Globalization.CultureInfo.CurrentCulture.Name;
    var dir = culture.StartsWith("ar") ? "rtl" : "ltr";
}

<!DOCTYPE html>
<html lang="@culture" dir="@dir">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@title - @Localizer["OnlineExam"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/onlineExamApp.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        body.dark-mode {
            background-color: #121212;
            color: #e4e4e4;
        }
        body.dark-mode .navbar,
        body.dark-mode footer {
            background-color: #1f1f1f !important;
        }
        body.dark-mode .nav-link,
        body.dark-mode .btn,
        body.dark-mode .dropdown-menu {
            color: #ffffff !important;
        }
        body.dark-mode .content-box {
            background-color: #1e1e1e;
            border-radius: 12px;
            padding: 25px;
        }
        #themeToggle i {
            font-size: 1rem;
            transition: transform 0.3s ease;
        }
        #themeToggle:hover i {
            transform: scale(1.2);
        }
        body, .navbar, footer, .content-box {
            transition: background-color 0.3s, color 0.3s;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-light sticky-top shadow-sm">
            <div class="container d-flex align-items-center justify-content-between">
                <button class="toggle-btn btn btn-outline-secondary" id="toggleSidebar">@Localizer["SidebarToggle"]</button>
                <ul class="navbar-nav ms-auto d-flex align-items-center">
                    <li class="nav-item me-3">
                        <button id="themeToggle" class="btn btn-outline-secondary p-1">
                            <i class="bi bi-moon"></i>
                        </button>
                    </li>
                    <li class="nav-item dropdown me-3">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"> @(culture.StartsWith("ar") ? "العربية" : "English") </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <form asp-controller="Account" asp-action="SetLanguage" method="post" class="dropdown-item">
                                    <input type="hidden" name="culture" value="en-US" />
                                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                    <button type="submit" class="btn btn-link p-0 m-0">English</button>
                                </form>
                            </li>
                            <li>
                                <form asp-controller="Account" asp-action="SetLanguage" method="post" class="dropdown-item">
                                    <input type="hidden" name="culture" value="ar-SA" />
                                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                    <button type="submit" class="btn btn-link p-0 m-0">العربية</button>
                                </form>
                            </li>
                        </ul>
                    </li>
                    @if (SignInManager.IsSignedIn(User))
                    {
                            <li class="nav-item">
                                <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-danger btn-lg fw-bold px-4">
                                        <i class="bi bi-box-arrow-right me-1"></i> @Localizer["Logout"]
                                    </button>
                                </form>
                            </li>
                    }
                    else
                    {
                            <li class="nav-item me-2">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">@Localizer["Login"]</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">@Localizer["Register"]</a>
                            </li>
                    }
                </ul>
            </div>
        </nav>
    </header>
    <div id="sidebar" class="pt-5">
        <nav class="nav flex-column p-3">
            @{
                var user = SignInManager.IsSignedIn(User)
                    ? await UserManager.GetUserAsync(User)
                    : null;
            }
            @if (user != null)
            {
                    <div class="mb-4 mt-5 text-center" style="margin-top: 150px;">
                        <img src="@(!string.IsNullOrEmpty(user.ProfileImagePath) ? user.ProfileImagePath : "/images/defualt_user.png")"
                             alt="Profile"
                             width="60"
                             height="60"
                             class="rounded-circle border border-2 border-secondary" />
                        <div class="nav-link fw-bold mt-2" style="font-size: 1.5rem;">@user.DisplayName</div>
                    </div>
            }
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Student"))
            {
                    <a class="nav-link" asp-controller="Students" asp-action="index"><i class="bi bi-house-door me-2"></i> @Localizer["Home"]</a>
                    <a class="nav-link" asp-controller="Profile" asp-action="Edit"><i class="bi bi-person-circle me-2"></i> @Localizer["Profile"]</a>
                    <a class="nav-link" asp-controller="Students" asp-action="AvailableExams"><i class="bi bi-ui-checks-grid me-2"></i> @Localizer["AvailableExams"]</a>
                    <a class="nav-link" asp-controller="Students" asp-action="MyResults"><i class="bi bi-bar-chart-line me-2"></i> @Localizer["MyResults"]</a>
            }
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Educator"))
            {
                    <a class="nav-link" asp-controller="Exams" asp-action="EducatorPage"><i class="bi bi-house-door me-2"></i> @Localizer["Home"]</a>
                    <a class="nav-link" asp-controller="Profile" asp-action="Edit"><i class="bi bi-person-circle me-2"></i> @Localizer["Profile"]</a>
                    <a class="nav-link" asp-controller="Exams" asp-action="Create"><i class="bi bi-plus-circle me-2"></i> @Localizer["CreateNewExam"]</a>
                    <a class="nav-link" asp-controller="Exams" asp-action="MyExams"><i class="bi bi-folder2-open me-2"></i> @Localizer["ViewMyExams"]</a>
            }
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
            {
                    <a class="nav-link" asp-controller="Admin" asp-action="index"><i class="bi bi-house-door me-2"></i> @Localizer["Home"]</a>
                    <a class="nav-link" asp-controller="Profile" asp-action="Edit"><i class="bi bi-person-circle me-2"></i> @Localizer["Profile"]</a>
                    <a class="nav-link" asp-controller="Admin" asp-action="ManageUsers"><i class="bi bi-people me-2"></i> @Localizer["ManageUsers"]</a>
                    <a class="nav-link" asp-controller="Admin" asp-action="ExamCompletion"><i class="bi bi-clipboard-check me-2"></i> @Localizer["ExamCompletionStats"]</a>
                    <a class="nav-link" asp-controller="Admin" asp-action="UniversityRanking"><i class="bi bi-trophy me-2"></i> @Localizer["UniversityRankingTitle"]</a>
                    <a class="nav-link" asp-controller="Admin" asp-action="EducatorPerformance"><i class="bi bi-graph-up-arrow me-2"></i> @Localizer["EducatorPerformance"]</a>
            }
        </nav>
    </div>
    <div class="main-content">
        <div class="content-box container py-4">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    </div>
    <footer class="text-center py-4 text-muted" style="background-color: #fafafa;">
        &copy; @DateTime.Now.Year OnlineExam. @Localizer["AllRightsReserved"]
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById('toggleSidebar')?.addEventListener('click', function () {
                document.getElementById('sidebar').classList.toggle('collapsed');
                document.body.classList.toggle('sidebar-collapsed');
            });
            const toggleThemeBtn = document.getElementById('themeToggle');
            const bodyEl = document.body;
            if (localStorage.getItem('theme') === 'dark') {
                bodyEl.classList.add('dark-mode');
                toggleThemeBtn.innerHTML = '<i class="bi bi-sun"></i>';
            }
            toggleThemeBtn.addEventListener('click', () => {
                bodyEl.classList.toggle('dark-mode');
                if (bodyEl.classList.contains('dark-mode')) {
                    localStorage.setItem('theme', 'dark');
                    toggleThemeBtn.innerHTML = '<i class="bi bi-sun"></i>';
                } else {
                    localStorage.setItem('theme', 'light');
                    toggleThemeBtn.innerHTML = '<i class="bi bi-moon"></i>';
                }
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
