@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["ExamCompletionStats"];
}
<head>
    <link rel="stylesheet" href="~/css/page.css" asp-append-version="true" />
</head>

<h2 class="mb-4 text-center">@Localizer["ExamCompletionStats"]</h2>

<div class="row mb-4 justify-content-center" style="max-width: 900px; margin: auto;">
    <div class="col-auto text-center">
        <div class="card shadow-sm" style="background-color: #ccb296; color: #5e4b3c; width: 250px; margin: auto;">
            <div class="card-body">
                <h5>@Localizer["Exams"]</h5>
                <p class="display-5">@ViewBag.TotalExams</p>
            </div>
        </div>
    </div>
    <div class="col-auto text-center">
        <div class="card shadow-sm" style="background-color: #e0c9a6; color: #5e4b3c; width: 250px; margin: auto;">
            <div class="card-body">
                <h5>@Localizer["Started"]</h5>
                <p class="display-5">@ViewBag.TotalStarted</p>
            </div>
        </div>
    </div>
    <div class="col-auto text-center">
        <div class="card shadow-sm" style="background-color: #a67c52; color: #fff; width: 250px; margin: auto;">
            <div class="card-body">
                <h5>@Localizer["Completed"]</h5>
                <p class="display-5">@ViewBag.TotalCompleted</p>
            </div>
        </div>
    </div>
</div>

<p class="text-muted text-center mb-4" style="max-width: 700px; margin: auto;">
    @Localizer["ExamCompletionDescription"]
</p>

<div id="loadingMessage" class="text-center text-muted mb-4">
    <span class="spinner-border text-secondary" role="status" aria-hidden="true"></span>
    <span class="ms-2">@Localizer["LoadingChart"]</span>
</div>

<div id="completionChart" style="width: 80%; max-width: 700px; height: 400px; margin: auto;"></div>

@section Scripts {
    <script src="https://code.highcharts.com/highcharts.js"></script>

    <script>
        async function loadCompletionStats() {
            const res = await fetch('@Url.Action("GetExamCompletionStats", "Admin")');

            if (!res.ok) {
                alert("@Localizer["FailedToLoadExamStats"]");
                return;
            }

            const data = await res.json();
            document.getElementById('loadingMessage').style.display = 'none';

            if (!data || data.length === 0) {
                document.getElementById('completionChart').innerHTML =
                    '<p class="text-muted text-center">@Localizer["NoExamData"]</p>';
                return;
            }

            const labels = data.map(d => d.examTitle);
            const startedData = data.map(d => d.started);
            const completedData = data.map(d => d.completed);

            Highcharts.chart('completionChart', {
                chart: { type: 'column', backgroundColor: '#fff' },
                title: {
                    text: '@Localizer["ExamCompletionStats"]',
                    style: { fontSize: '16px', color: '#5e4b3c' }
                },
                xAxis: {
                    categories: labels,
                    title: { text: '@Localizer["Exams"]' },
                    labels: { style: { color: '#5e4b3c' } }
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: '@Localizer["AttemptsCount"]',
                        style: { color: '#5e4b3c' }
                    },
                    labels: { style: { color: '#5e4b3c' } }
                },
                legend: {
                    itemStyle: { color: '#5e4b3c' }
                },
                plotOptions: {
                    series: {
                        animation: { duration: 1000 }
                    }
                },
                series: [
                    {
                        name: '@Localizer["Started"]',
                        data: startedData,
                        color: '#e0c9a6'
                    },
                    {
                        name: '@Localizer["Completed"]',
                        data: completedData,
                        color: '#a67c52'
                    }
                ],
                credits: { enabled: false }
            });
        }

        loadCompletionStats();
    </script>
}



